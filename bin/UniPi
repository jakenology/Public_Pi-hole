#!/bin/bash
## Universal Pi-hole Settings Script
## This script will update all settings to be universal with all Pi-hole's 
## Define Global Variables
unipiDir="/etc/UniPi"
repo="https://github.com/jaykepeters/UniPi.git"
master="FALSE"

## Define Functions
## Pre-Check (Are we ready to go?)
message() {
    echo "$1"
}

preCheck() {
    # Notify User
    message "Running Checks..."

    # Have we ever installed yet?
    if [ -f "$unipiDir/install.receipt"]; then
        message "Install Check Passed"
    fi
    # Check for UniPi Directory as defined above
    if [ ! -d $unipiDir ]; then
        mkdir $unipiDir
    fi

    # Is this instance the master?
    if [ -f "$unipiDir/master" ]; then
        message "THIS IS THE MASTER INSTANCE"
        master="TRUE"
    fi

    # Is this instance a slave?
    if [ -f "$unipiDir/slave" ]; then
        message "THIS IS A SLAVE INSTANCE"
    fi
}

## Get Configuration from GitHub Repo
getConfig() {
    message "Getting Configuration"
    # Change Directory into UniPi
    cd $unipiDir

    # Clone Repo
    git clone $repo

    # Rename to Downlaods
    mv ./UniPi ./Downloads

    # Change Directory into Downloads
    cd ./Downloads
}

## Update binaries
updateBin() {
    message "Updating Binaries"
    for filename in bin/*
    do
        mv $filename /usr/local/bin/
    done;

    giveExecutePerms() {
        for file in /usr/local/bin/*
        do
            chmod a+x $file
        done;
    }

    giveExecutePerms
}

## Update Pi-hole Settings
updatePihole() {
    echo "Checking for Pi-hole Updates..."
    pihole -up >> /dev/null

    message "Updating Pi-hole Configuration"
    for filename in pihole/*
    do
        mv $filename /etc/pihole/
    done;

    service dnsmasq restart
}

## Update DNS Settings
updateDNS() {
    for filename in dns/*
    do
        mv $filename /etc/dnsmasq.d/
    done;
}

## Add Cron Jobs
updateCron() {
    message "Updating Cron Jobs"
    crontab.sh --remove
    for filename in cron/*
    do 
        mv $filename /etc/UniPi/
    done;
    crontab.sh >> /dev/null
}

## Finish Up
finishUp() {
    message "All Done!"
    cd ..
    rm -rf ./Downloads
}

## MAIN LOOP 
main() {
    # Pre-Check
    preCheck

    # Get Configuration
    getConfig

    # Update Binaries
    updateBin

    # Update Pi-hole Settings
    updatePihole

    # Update DNS Settings
    updateDNS

    # Add Cron Jobs
    updateCron

    # Finish Up
    finishUp
}

## Start Me!
main
